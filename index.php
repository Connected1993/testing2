<?php

// git init - инициализация нового репозитория ( локльного )
// .gitignore - создаем файл и заносим туда исключения, файлы которые не будут сохраняться в репозиторий
// git status - статус (отслеживание доб., изм., файлов)
// git add * или git add . - добавить все файлы в репозиторий
// git commit -m "НазваниеКомита"
// git checkout [хеш] - переключаемся на комит

// git config --global user.name "ВАШЕ ИМЯ"
// git config --global user.email "alexanderbalabas1993@gmail.com"
// git log - вывод логов коммитов
// git remote - посмотреть списко удаленных репозиториев
// git remote add origin [ссылка на ваш репозиторий] - добавить репозиторий с псевдонимом origin
// git push -u origin master - загрузить на сервер
// git clone [ссылка на ваш репозиторий] - скачать репозиторий по ссылке
// git checkout -b newBranch - создаем новую вутку с название newBranch и переключаемся на нее
// git branch - посмотреть текущую ветку
// git checkout [название ветки] - переключиться на указанную ветку
// новый комментарий


// git merge newBranch - слияние текущей ветки с веткой newBranch
// git reset --hard - прекращает слияние и очистит все незакомиченные изменения включая конфликты
// git push --set-upstream origin newBranch2 - добавить в удаленный репозиторий ветку newBranch2 и загрузить ее содержимое
// git pull [ссылка на репозиторий] - забираем изменения с удаленного репозитория , сохраняет их в локальной репозитории для указанной ветки

// git branch -D newBranch2 - удаляет ветку newBranch2 (коммиты которые находились в этой ветке еще живы)

// git checkout --ours index.php - выбрать изменения с ветки master
// git checkout --theirs index.php - выбрать изменения не с ветки мастера